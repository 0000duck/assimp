/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class aiMaterial : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal aiMaterial(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(aiMaterial obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~aiMaterial() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          AssimpPINVOKE.delete_aiMaterial(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public aiMaterial() : this(AssimpPINVOKE.new_aiMaterial(), true) {
  }

  public uint GetTextureCount(aiTextureType type) {
    uint ret = AssimpPINVOKE.aiMaterial_GetTextureCount(swigCPtr, (int)type);
    return ret;
  }

  public aiReturn GetTexture(aiTextureType type, uint index, aiString path, SWIGTYPE_p_aiTextureMapping mapping, SWIGTYPE_p_unsigned_int uvindex, SWIGTYPE_p_float blend, SWIGTYPE_p_aiTextureOp op, SWIGTYPE_p_aiTextureMapMode mapmode) {
    aiReturn ret = (aiReturn)AssimpPINVOKE.aiMaterial_GetTexture__SWIG_0(swigCPtr, (int)type, index, aiString.getCPtr(path), SWIGTYPE_p_aiTextureMapping.getCPtr(mapping), SWIGTYPE_p_unsigned_int.getCPtr(uvindex), SWIGTYPE_p_float.getCPtr(blend), SWIGTYPE_p_aiTextureOp.getCPtr(op), SWIGTYPE_p_aiTextureMapMode.getCPtr(mapmode));
    return ret;
  }

  public aiReturn GetTexture(aiTextureType type, uint index, aiString path, SWIGTYPE_p_aiTextureMapping mapping, SWIGTYPE_p_unsigned_int uvindex, SWIGTYPE_p_float blend, SWIGTYPE_p_aiTextureOp op) {
    aiReturn ret = (aiReturn)AssimpPINVOKE.aiMaterial_GetTexture__SWIG_1(swigCPtr, (int)type, index, aiString.getCPtr(path), SWIGTYPE_p_aiTextureMapping.getCPtr(mapping), SWIGTYPE_p_unsigned_int.getCPtr(uvindex), SWIGTYPE_p_float.getCPtr(blend), SWIGTYPE_p_aiTextureOp.getCPtr(op));
    return ret;
  }

  public aiReturn GetTexture(aiTextureType type, uint index, aiString path, SWIGTYPE_p_aiTextureMapping mapping, SWIGTYPE_p_unsigned_int uvindex, SWIGTYPE_p_float blend) {
    aiReturn ret = (aiReturn)AssimpPINVOKE.aiMaterial_GetTexture__SWIG_2(swigCPtr, (int)type, index, aiString.getCPtr(path), SWIGTYPE_p_aiTextureMapping.getCPtr(mapping), SWIGTYPE_p_unsigned_int.getCPtr(uvindex), SWIGTYPE_p_float.getCPtr(blend));
    return ret;
  }

  public aiReturn GetTexture(aiTextureType type, uint index, aiString path, SWIGTYPE_p_aiTextureMapping mapping, SWIGTYPE_p_unsigned_int uvindex) {
    aiReturn ret = (aiReturn)AssimpPINVOKE.aiMaterial_GetTexture__SWIG_3(swigCPtr, (int)type, index, aiString.getCPtr(path), SWIGTYPE_p_aiTextureMapping.getCPtr(mapping), SWIGTYPE_p_unsigned_int.getCPtr(uvindex));
    return ret;
  }

  public aiReturn GetTexture(aiTextureType type, uint index, aiString path, SWIGTYPE_p_aiTextureMapping mapping) {
    aiReturn ret = (aiReturn)AssimpPINVOKE.aiMaterial_GetTexture__SWIG_4(swigCPtr, (int)type, index, aiString.getCPtr(path), SWIGTYPE_p_aiTextureMapping.getCPtr(mapping));
    return ret;
  }

  public aiReturn GetTexture(aiTextureType type, uint index, aiString path) {
    aiReturn ret = (aiReturn)AssimpPINVOKE.aiMaterial_GetTexture__SWIG_5(swigCPtr, (int)type, index, aiString.getCPtr(path));
    return ret;
  }

  public SWIGTYPE_p_p_aiMaterialProperty mProperties {
    set {
      AssimpPINVOKE.aiMaterial_mProperties_set(swigCPtr, SWIGTYPE_p_p_aiMaterialProperty.getCPtr(value));
    } 
    get {
      IntPtr cPtr = AssimpPINVOKE.aiMaterial_mProperties_get(swigCPtr);
      SWIGTYPE_p_p_aiMaterialProperty ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_p_aiMaterialProperty(cPtr, false);
      return ret;
    } 
  }

  public uint mNumProperties {
    set {
      AssimpPINVOKE.aiMaterial_mNumProperties_set(swigCPtr, value);
    } 
    get {
      uint ret = AssimpPINVOKE.aiMaterial_mNumProperties_get(swigCPtr);
      return ret;
    } 
  }

  public uint mNumAllocated {
    set {
      AssimpPINVOKE.aiMaterial_mNumAllocated_set(swigCPtr, value);
    } 
    get {
      uint ret = AssimpPINVOKE.aiMaterial_mNumAllocated_get(swigCPtr);
      return ret;
    } 
  }

}
