/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class aiScene : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal aiScene(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(aiScene obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~aiScene() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          AssimpPINVOKE.delete_aiScene(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public uint mFlags {
    set {
      AssimpPINVOKE.aiScene_mFlags_set(swigCPtr, value);
    } 
    get {
      uint ret = AssimpPINVOKE.aiScene_mFlags_get(swigCPtr);
      return ret;
    } 
  }

  public aiNode mRootNode {
    set {
      AssimpPINVOKE.aiScene_mRootNode_set(swigCPtr, aiNode.getCPtr(value));
    } 
    get {
      IntPtr cPtr = AssimpPINVOKE.aiScene_mRootNode_get(swigCPtr);
      aiNode ret = (cPtr == IntPtr.Zero) ? null : new aiNode(cPtr, false);
      return ret;
    } 
  }

  public uint mNumMeshes {
    set {
      AssimpPINVOKE.aiScene_mNumMeshes_set(swigCPtr, value);
    } 
    get {
      uint ret = AssimpPINVOKE.aiScene_mNumMeshes_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_p_aiMesh mMeshes {
    set {
      AssimpPINVOKE.aiScene_mMeshes_set(swigCPtr, SWIGTYPE_p_p_aiMesh.getCPtr(value));
    } 
    get {
      IntPtr cPtr = AssimpPINVOKE.aiScene_mMeshes_get(swigCPtr);
      SWIGTYPE_p_p_aiMesh ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_p_aiMesh(cPtr, false);
      return ret;
    } 
  }

  public uint mNumMaterials {
    set {
      AssimpPINVOKE.aiScene_mNumMaterials_set(swigCPtr, value);
    } 
    get {
      uint ret = AssimpPINVOKE.aiScene_mNumMaterials_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_p_aiMaterial mMaterials {
    set {
      AssimpPINVOKE.aiScene_mMaterials_set(swigCPtr, SWIGTYPE_p_p_aiMaterial.getCPtr(value));
    } 
    get {
      IntPtr cPtr = AssimpPINVOKE.aiScene_mMaterials_get(swigCPtr);
      SWIGTYPE_p_p_aiMaterial ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_p_aiMaterial(cPtr, false);
      return ret;
    } 
  }

  public uint mNumAnimations {
    set {
      AssimpPINVOKE.aiScene_mNumAnimations_set(swigCPtr, value);
    } 
    get {
      uint ret = AssimpPINVOKE.aiScene_mNumAnimations_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_p_aiAnimation mAnimations {
    set {
      AssimpPINVOKE.aiScene_mAnimations_set(swigCPtr, SWIGTYPE_p_p_aiAnimation.getCPtr(value));
    } 
    get {
      IntPtr cPtr = AssimpPINVOKE.aiScene_mAnimations_get(swigCPtr);
      SWIGTYPE_p_p_aiAnimation ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_p_aiAnimation(cPtr, false);
      return ret;
    } 
  }

  public uint mNumTextures {
    set {
      AssimpPINVOKE.aiScene_mNumTextures_set(swigCPtr, value);
    } 
    get {
      uint ret = AssimpPINVOKE.aiScene_mNumTextures_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_p_aiTexture mTextures {
    set {
      AssimpPINVOKE.aiScene_mTextures_set(swigCPtr, SWIGTYPE_p_p_aiTexture.getCPtr(value));
    } 
    get {
      IntPtr cPtr = AssimpPINVOKE.aiScene_mTextures_get(swigCPtr);
      SWIGTYPE_p_p_aiTexture ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_p_aiTexture(cPtr, false);
      return ret;
    } 
  }

  public uint mNumLights {
    set {
      AssimpPINVOKE.aiScene_mNumLights_set(swigCPtr, value);
    } 
    get {
      uint ret = AssimpPINVOKE.aiScene_mNumLights_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_p_aiLight mLights {
    set {
      AssimpPINVOKE.aiScene_mLights_set(swigCPtr, SWIGTYPE_p_p_aiLight.getCPtr(value));
    } 
    get {
      IntPtr cPtr = AssimpPINVOKE.aiScene_mLights_get(swigCPtr);
      SWIGTYPE_p_p_aiLight ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_p_aiLight(cPtr, false);
      return ret;
    } 
  }

  public uint mNumCameras {
    set {
      AssimpPINVOKE.aiScene_mNumCameras_set(swigCPtr, value);
    } 
    get {
      uint ret = AssimpPINVOKE.aiScene_mNumCameras_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_p_aiCamera mCameras {
    set {
      AssimpPINVOKE.aiScene_mCameras_set(swigCPtr, SWIGTYPE_p_p_aiCamera.getCPtr(value));
    } 
    get {
      IntPtr cPtr = AssimpPINVOKE.aiScene_mCameras_get(swigCPtr);
      SWIGTYPE_p_p_aiCamera ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_p_aiCamera(cPtr, false);
      return ret;
    } 
  }

  public aiScene() : this(AssimpPINVOKE.new_aiScene(), true) {
  }

  public bool HasMeshes() {
    bool ret = AssimpPINVOKE.aiScene_HasMeshes(swigCPtr);
    return ret;
  }

  public bool HasMaterials() {
    bool ret = AssimpPINVOKE.aiScene_HasMaterials(swigCPtr);
    return ret;
  }

  public bool HasLights() {
    bool ret = AssimpPINVOKE.aiScene_HasLights(swigCPtr);
    return ret;
  }

  public bool HasTextures() {
    bool ret = AssimpPINVOKE.aiScene_HasTextures(swigCPtr);
    return ret;
  }

  public bool HasCameras() {
    bool ret = AssimpPINVOKE.aiScene_HasCameras(swigCPtr);
    return ret;
  }

  public bool HasAnimations() {
    bool ret = AssimpPINVOKE.aiScene_HasAnimations(swigCPtr);
    return ret;
  }

}
