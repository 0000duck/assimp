/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class aiBone : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal aiBone(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(aiBone obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~aiBone() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          Assimp_NETPINVOKE.delete_aiBone(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public aiString mName {
    set {
      Assimp_NETPINVOKE.aiBone_mName_set(swigCPtr, aiString.getCPtr(value));
    } 
    get {
      IntPtr cPtr = Assimp_NETPINVOKE.aiBone_mName_get(swigCPtr);
      aiString ret = (cPtr == IntPtr.Zero) ? null : new aiString(cPtr, false);
      return ret;
    } 
  }

  public uint mNumWeights {
    set {
      Assimp_NETPINVOKE.aiBone_mNumWeights_set(swigCPtr, value);
    } 
    get {
      uint ret = Assimp_NETPINVOKE.aiBone_mNumWeights_get(swigCPtr);
      return ret;
    } 
  }

  public aiVertexWeight mWeights {
    set {
      Assimp_NETPINVOKE.aiBone_mWeights_set(swigCPtr, aiVertexWeight.getCPtr(value));
    } 
    get {
      IntPtr cPtr = Assimp_NETPINVOKE.aiBone_mWeights_get(swigCPtr);
      aiVertexWeight ret = (cPtr == IntPtr.Zero) ? null : new aiVertexWeight(cPtr, false);
      return ret;
    } 
  }

  public aiMatrix4x4 mOffsetMatrix {
    set {
      Assimp_NETPINVOKE.aiBone_mOffsetMatrix_set(swigCPtr, aiMatrix4x4.getCPtr(value));
    } 
    get {
      IntPtr cPtr = Assimp_NETPINVOKE.aiBone_mOffsetMatrix_get(swigCPtr);
      aiMatrix4x4 ret = (cPtr == IntPtr.Zero) ? null : new aiMatrix4x4(cPtr, false);
      return ret;
    } 
  }

  public aiBone() : this(Assimp_NETPINVOKE.new_aiBone__SWIG_0(), true) {
  }

  public aiBone(aiBone other) : this(Assimp_NETPINVOKE.new_aiBone__SWIG_1(aiBone.getCPtr(other)), true) {
    if (Assimp_NETPINVOKE.SWIGPendingException.Pending) throw Assimp_NETPINVOKE.SWIGPendingException.Retrieve();
  }

}
